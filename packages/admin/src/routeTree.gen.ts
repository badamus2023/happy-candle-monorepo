/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as StatisticsImport } from './routes/statistics'
import { Route as SettingsImport } from './routes/settings'
import { Route as ReportImport } from './routes/report'
import { Route as ProductsImport } from './routes/products'
import { Route as OrdersImport } from './routes/orders'
import { Route as DiscountsImport } from './routes/discounts'
import { Route as CustomersImport } from './routes/customers'
import { Route as CategoriesImport } from './routes/categories'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const StatisticsRoute = StatisticsImport.update({
  id: '/statistics',
  path: '/statistics',
  getParentRoute: () => rootRoute,
} as any)

const SettingsRoute = SettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const ReportRoute = ReportImport.update({
  id: '/report',
  path: '/report',
  getParentRoute: () => rootRoute,
} as any)

const ProductsRoute = ProductsImport.update({
  id: '/products',
  path: '/products',
  getParentRoute: () => rootRoute,
} as any)

const OrdersRoute = OrdersImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => rootRoute,
} as any)

const DiscountsRoute = DiscountsImport.update({
  id: '/discounts',
  path: '/discounts',
  getParentRoute: () => rootRoute,
} as any)

const CustomersRoute = CustomersImport.update({
  id: '/customers',
  path: '/customers',
  getParentRoute: () => rootRoute,
} as any)

const CategoriesRoute = CategoriesImport.update({
  id: '/categories',
  path: '/categories',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/categories': {
      id: '/categories'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof CategoriesImport
      parentRoute: typeof rootRoute
    }
    '/customers': {
      id: '/customers'
      path: '/customers'
      fullPath: '/customers'
      preLoaderRoute: typeof CustomersImport
      parentRoute: typeof rootRoute
    }
    '/discounts': {
      id: '/discounts'
      path: '/discounts'
      fullPath: '/discounts'
      preLoaderRoute: typeof DiscountsImport
      parentRoute: typeof rootRoute
    }
    '/orders': {
      id: '/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof OrdersImport
      parentRoute: typeof rootRoute
    }
    '/products': {
      id: '/products'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsImport
      parentRoute: typeof rootRoute
    }
    '/report': {
      id: '/report'
      path: '/report'
      fullPath: '/report'
      preLoaderRoute: typeof ReportImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/statistics': {
      id: '/statistics'
      path: '/statistics'
      fullPath: '/statistics'
      preLoaderRoute: typeof StatisticsImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/categories': typeof CategoriesRoute
  '/customers': typeof CustomersRoute
  '/discounts': typeof DiscountsRoute
  '/orders': typeof OrdersRoute
  '/products': typeof ProductsRoute
  '/report': typeof ReportRoute
  '/settings': typeof SettingsRoute
  '/statistics': typeof StatisticsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/categories': typeof CategoriesRoute
  '/customers': typeof CustomersRoute
  '/discounts': typeof DiscountsRoute
  '/orders': typeof OrdersRoute
  '/products': typeof ProductsRoute
  '/report': typeof ReportRoute
  '/settings': typeof SettingsRoute
  '/statistics': typeof StatisticsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/categories': typeof CategoriesRoute
  '/customers': typeof CustomersRoute
  '/discounts': typeof DiscountsRoute
  '/orders': typeof OrdersRoute
  '/products': typeof ProductsRoute
  '/report': typeof ReportRoute
  '/settings': typeof SettingsRoute
  '/statistics': typeof StatisticsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/categories'
    | '/customers'
    | '/discounts'
    | '/orders'
    | '/products'
    | '/report'
    | '/settings'
    | '/statistics'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/categories'
    | '/customers'
    | '/discounts'
    | '/orders'
    | '/products'
    | '/report'
    | '/settings'
    | '/statistics'
  id:
    | '__root__'
    | '/'
    | '/categories'
    | '/customers'
    | '/discounts'
    | '/orders'
    | '/products'
    | '/report'
    | '/settings'
    | '/statistics'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CategoriesRoute: typeof CategoriesRoute
  CustomersRoute: typeof CustomersRoute
  DiscountsRoute: typeof DiscountsRoute
  OrdersRoute: typeof OrdersRoute
  ProductsRoute: typeof ProductsRoute
  ReportRoute: typeof ReportRoute
  SettingsRoute: typeof SettingsRoute
  StatisticsRoute: typeof StatisticsRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CategoriesRoute: CategoriesRoute,
  CustomersRoute: CustomersRoute,
  DiscountsRoute: DiscountsRoute,
  OrdersRoute: OrdersRoute,
  ProductsRoute: ProductsRoute,
  ReportRoute: ReportRoute,
  SettingsRoute: SettingsRoute,
  StatisticsRoute: StatisticsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/categories",
        "/customers",
        "/discounts",
        "/orders",
        "/products",
        "/report",
        "/settings",
        "/statistics"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/categories": {
      "filePath": "categories.tsx"
    },
    "/customers": {
      "filePath": "customers.tsx"
    },
    "/discounts": {
      "filePath": "discounts.tsx"
    },
    "/orders": {
      "filePath": "orders.tsx"
    },
    "/products": {
      "filePath": "products.tsx"
    },
    "/report": {
      "filePath": "report.tsx"
    },
    "/settings": {
      "filePath": "settings.tsx"
    },
    "/statistics": {
      "filePath": "statistics.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
